"""
Django settings for inventory project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
from dotenv import load_dotenv
import os

# .env dosyasını yüklemek için load_dotenv'i çağırın
load_dotenv()
DATABASE_PASSWORD = os.getenv('DATABASE_PASSWORD')

# Örnek kullanım
SECRET_KEY = os.getenv('SECRET_KEY')
MASTER_USERNAME = os.getenv('MASTER_USERNAME')
MASTER_PASSWORD = os.getenv('MASTER_PASSWORD')
MASTER_COMPANY = os.getenv('MASTER_COMPANY')
MASTER_TAG = os.getenv('MASTER_TAG')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'rest_framework.authentication.SessionAuthentication',  # Oturum tabanlı kimlik doğrulama
#         'rest_framework.authentication.BasicAuthentication',  # Temel kimlik doğrulama
#     ],
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.IsAuthenticated',  # Giriş yapmış kullanıcılar
#     ],
# }

AUTHENTICATION_BACKENDS = [
    'inventory_track.backends.CustomUserBackend',  # Kendi kullanıcı doğrulama işleminiz
    'django.contrib.auth.backends.ModelBackend',    # Django'nun yerleşik model doğrulaması
    'inventory_track.backends.LDAPBackend',  # LDAP doğrulaması (varsa)
]
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Veritabanı tabanlı session kullanımı

# Application definition

INSTALLED_APPS = [
    'widget_tweaks',
    # 'silk',
    'ldap3',
    'inventory_api',
    'inventory_track',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
      # Middleware'inizi buraya ekleyin
    
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'inventory_track.middleware.CheckCompanyMiddleware',
    # 'silk.middleware.SilkyMiddleware',
    
]

ROOT_URLCONF = 'inventory.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'inventory_track.context_processors.add_user_permissions',
                 'inventory_track.context_processors.company_code',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'inventory.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'otel_takip',  # Veritabanı adı
        'USER': 'postgres',  # Veritabanı kullanıcı adı
        'PASSWORD': 'serkan',  # Veritabanı şifresi
        'HOST': 'localhost',  # PostgreSQL sunucusunun adresi (yerel sunucu için 'localhost')
        'PORT': '5432',  # PostgreSQL'in varsayılan portu (5432)
    }
}

AUTH_USER_MODEL = 'inventory_track.CustomUser'
# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'tr-TR'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
